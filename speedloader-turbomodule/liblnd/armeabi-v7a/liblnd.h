/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package github.com/lightningnetwork/lnd/mobile */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 4 "cgo_utils_generated.go"

#ifndef CALLBACK_DEFS_H
#define CALLBACK_DEFS_H

#include <stdlib.h>

typedef void (*ResponseFunc)(void* context, const char* data, int length);
typedef void (*ErrorFunc)(void* context, const char* error);

static inline void bridgeResponseFunc(ResponseFunc f, void* context, const char* data, int length) {
    if (f) f(context, data, length);
}

static inline void bridgeErrorFunc(ErrorFunc f, void* context, const char* error) {
    if (f) f(context, error);
}

// Callback
typedef struct CCallback {
    ResponseFunc onResponse;
    ErrorFunc onError;
    void* responseContext;
    void* errorContext;
} CCallback;

// RecvStream
typedef struct CRecvStream {
    ResponseFunc onResponse;
    ErrorFunc onError;
    void* responseContext;
    void* errorContext;
} CRecvStream;

// SendStream
typedef void (*SendFunc)(uintptr_t streamPtr, const char* data, int length);
typedef void (*StopFunc)(uintptr_t streamPtr);

typedef struct CSendStream {
    SendFunc send;
    StopFunc stop;
    uintptr_t streamPtr;
} CSendStream;

static inline CSendStream* allocCSendStream() {
    return (CSendStream*)malloc(sizeof(CSendStream));
}

static inline void freeCSendStream(CSendStream* stream) {
    if (stream != NULL) {
        free(stream);
    }
}

#endif // CALLBACK_DEFS_H

#line 1 "cgo-generated-wrapper"

#line 3 "speedloader_cgo.go"

#ifndef CALLBACK_DEFS_H
#define CALLBACK_DEFS_H

#include <stdlib.h>

typedef void (*ResponseFunc)(void* context, const char* data, int length);
typedef void (*ErrorFunc)(void* context, const char* error);

typedef struct CCallback {
    ResponseFunc onResponse;
    ErrorFunc onError;
    void* responseContext;
    void* errorContext;
} CCallback;

#endif // CALLBACK_DEFS_H

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt32 GoInt;
typedef GoUint32 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_32_bit_pointer_matching_GoInt[sizeof(void*)==32/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern void gossipSync(char* serviceUrl, char* cacheDir, char* dataDir, char* networkType, CCallback callback);
extern void cancelGossipSync();

#ifdef __cplusplus
}
#endif
